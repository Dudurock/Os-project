//Q35. Write a C program to solve the following problem:
//Suppose that a disk drive has 5,000 cylinders, numbered 0 to 4999. The drive is currently
//serving a request at cylinder143, and the previous request was at cylinder 125. The queue of
//pending requests in FIFO order is:
//86, 1470, 913, 1774, 948, 1509, 1022, 1750, 130
//Starting from the current head position, what is the total distance (in cylinders)that the disk
//arm moves to satisfy all the pending requests for each of the C-LOOK disk-scheduling
//algorithms?

#include<stdio.h>

int main()
{
    int a[]={125,143,86,1470,913,1774,948,1509,1022,1750,130};
    int size=11,i,distance=0,p=0,j=1;
    	printf("\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\n");
				printf("\t\t\t\tLOOK DISK SCHEDULING \n\n");
			printf("\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\n");
    for(i=0;i<size-1;i++)
    {
        if(a[p]>a[j])
        {
        distance=distance+(a[p]-a[j]);
        }
        else
        {
            distance=distance+(a[j]-a[p]);
        }
        p++;
        j++;
    }


   
    {
        printf(" %d   ",a[i]);
    }
    printf("\n\n");

         	printf("    +-----------------------------------------------------------------------------------------------------------+\n");
			printf("    |  The total distance (in cylinders) that the disk arm moves to satisfy all the pending requests ::  %d   |\n ",distance);
	    	printf("   +-----------------------------------------------------------------------------------------------------------+\n");
   
}
